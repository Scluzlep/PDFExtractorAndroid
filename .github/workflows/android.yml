# 工作流名称
name: Android CI Build

# 工作流触发条件
on:
  # 当有代码推送到 main 分支时触发
  push:
    branches: [ "main" ]
  # 当有新的拉取请求指向 main 分支时触发
  pull_request:
    branches: [ "main" ]

# 定义工作任务
jobs:
  build:
    # 指定运行环境为最新的 Ubuntu
    runs-on: ubuntu-latest

    steps:
      # 第一步：检出代码
      # 拉取你的仓库代码到工作环境中
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置 Java 环境
      # 安装 Android 开发所需的 JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 第三步：设置 Gradle 缓存
      # 这个步骤会缓存 Gradle 的依赖项，极大地加快后续的构建速度
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # 第四步：授予 gradlew 执行权限
      # 在类 Unix 系统上，需要给 Gradle Wrapper 脚本添加可执行权限
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 第五步：使用 Gradle 构建项目
      # 运行标准的 'build' 命令，它会编译代码、运行测试并打包应用
      - name: Build with Gradle
        run: ./gradlew build

      # 第六步：上传构建产物 (APK)
      # 将构建生成的、未签名的 Release 版本 APK 文件上传
      # 构建成功后，您可以在工作流运行结果页面找到并下载它
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned.apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk